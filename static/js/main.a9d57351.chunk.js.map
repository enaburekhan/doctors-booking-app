{"version":3,"sources":["api/api.js","redux/userSlice.js","components/Loading.js","components/RegisterForm.js","redux/typeSlice.js","containers/Signup.js","redux/appointmentsSlice.js","components/Appointments.js","redux/doctorSlice.js","components/Doctor.js","redux/doctorsSlice.js","components/DoctorsList.js","containers/Login.js","containers/SocialIcons.js","components/Logout.js","components/NavBar.js","components/NewAppointment.js","components/Appointment.js","components/Home.js","containers/App.js","redux/store.js","index.js"],"names":["API","userAuth","createAsyncThunk","a","username","password","age","endpoint","fetch","method","headers","Accept","body","JSON","stringify","response","json","data","ok","Error","failure","localStorage","setItem","jwt","userSlice","createSlice","name","initialState","loading","error","reducers","logout","extraReducers","pending","state","rejected","action","toast","message","fulfilled","payload","actions","Loading","className","icon","faSpinner","spin","size","RegisterForm","access","history","useHistory","dispatch","useDispatch","user","useSelector","useState","setUsername","setPassword","setAge","token","getItem","useEffect","push","onSubmit","e","preventDefault","htmlFor","type","id","required","minLength","maxLength","value","onChange","target","to","typeSlice","changeType","_state","Signup","postAppointments","appointment_date","doctor_id","user_id","Authorization","getAppointments","statusText","appointmentsSlice","Appointments","appointments","length","map","appointment","date","Date","toUTCString","getDoctor","doctorSlice","Doctor","useParams","doctor","src","image","alt","specialization","experience","pathname","doctorId","getDoctors","doctorsSlice","selectAllDoctors","doctors","DoctorsList","renderedDoctors","Login","library","add","faFacebookF","faTwitter","faInstagram","SocialIcons","Logout","onClick","removeItem","faPowerOff","NavBar","NewAppointment","appointmentDate","setAppointmentDate","setDoctorId","successful","setSuccessful","setLoading","userData","options","then","alert","show","timeout","catch","console","log","selected","disabled","role","Appointment","handleDelete","Home","App","exact","path","component","configureStore","reducer","doctorsReducer","appointmentsReducer","userReducer","typeReducer","doctorReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a9d57351.chunk.js","sourcesContent":["const API = 'https://agile-escarpment-87534.herokuapp.com/api/v1';\n\nexport default API;\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport API from '../api/api';\n\nexport const userAuth = createAsyncThunk(\n  'user/userAuth',\n  async ({\n    username, password, age, endpoint,\n  }) => {\n    const response = await fetch(`${API}/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        age,\n      }),\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.failure);\n    localStorage.setItem('token', data.jwt);\n    return data;\n  },\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    loading: false,\n    error: null,\n    data: null,\n  },\n  reducers: {\n    logout: () => ({\n      loading: false,\n      error: null,\n      data: null,\n    }),\n  },\n  extraReducers: {\n    [userAuth.pending]: (state) => {\n      state.loading = true;\n    },\n    [userAuth.rejected]: (state, action) => {\n      state.loading = false;\n      toast.error(action.error.message);\n      state.error = action.error.message;\n    },\n    [userAuth.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { logout } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Loading = () => (<div className=\"loading\"><FontAwesomeIcon icon={faSpinner} spin size=\"5x\" /></div>);\n\nexport default Loading;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { userAuth } from '../redux/userSlice';\nimport Loading from './Loading';\n\nconst RegisterForm = ({ access, endpoint }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [age, setAge] = useState('');\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    if (token) {\n      history.push('/doctors');\n    }\n  }, [token]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(userAuth({\n      username, password, age, endpoint,\n    }));\n  };\n  if (user.loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group create\">\n          <label htmlFor=\"username\" className=\"control-label\">\n            Username\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              required\n              minLength=\"3\"\n              maxLength=\"15\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"form-group create\">\n          <label htmlFor=\"password\" className=\"control-label\">\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              required\n              minLength=\"5\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"form-group create\">\n          <label htmlFor=\"age\" className=\"control-label\">\n            Age\n            <input\n              type=\"number\"\n              name=\"age\"\n              id=\"age\"\n              required\n              minLength=\"1\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <div className=\"form-group create\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-lg\"\n          >\n            {access}\n          </button>\n        </div>\n      </form>\n      { access === 'Signup' ? (\n        <p className=\"text-center\">\n          Do you already have an account?\n          {' '}\n          <Link to=\"/Login\">Login</Link>\n        </p>\n      ) : (\n        <p className=\"text-center\">\n          Do you need to create an account?\n          {' '}\n          <Link to=\"/Signup\">Signup</Link>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n\nRegisterForm.propTypes = {\n  access: PropTypes.string.isRequired,\n  endpoint: PropTypes.string.isRequired,\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const typeSlice = createSlice({\n  name: 'type',\n  initialState: '',\n  reducers: {\n    changeType: (_state, action) => action.payload,\n  },\n});\n\nexport const { changeType } = typeSlice.actions;\n\nexport default typeSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport RegisterForm from '../components/RegisterForm';\nimport { changeType } from '../redux/typeSlice';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const access = 'Signup';\n  useEffect(() => {\n    dispatch(changeType(access));\n  }, []);\n  return (\n    <>\n      <RegisterForm access={access} endpoint=\"users\" />\n    </>\n  );\n};\n\nexport default Signup;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable camelcase */\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport API from '../api/api';\n\nexport const postAppointments = createAsyncThunk(\n  'appointments/postAppointments',\n  async (\n    {\n      appointment_date, doctor_id, user_id,\n    },\n  ) => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API}/appointments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n\n      body: JSON.stringify({\n        appointment_date,\n        doctor_id,\n        user_id,\n      }),\n    });\n\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.failure);\n\n    return data;\n  },\n);\n\nexport const getAppointments = createAsyncThunk(\n  'appointments/getAppointments',\n  async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API}/appointments`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data;\n  },\n);\n\nexport const appointmentsSlice = createSlice({\n  name: 'appointments',\n  initialState: {\n    loading: false,\n    error: null,\n    data: [],\n  },\n  extraReducers: {\n    [postAppointments.pending]: (state) => {\n      state.loading = true;\n    },\n    [postAppointments.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [postAppointments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data.push(action.payload);\n    },\n    [getAppointments.pending]: (state) => {\n      state.loading = true;\n    },\n    [getAppointments.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [getAppointments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n\n  },\n});\n\nexport default appointmentsSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getAppointments } from '../redux/appointmentsSlice';\n\nconst Appointments = () => {\n  const dispatch = useDispatch();\n  const { data: user } = useSelector((state) => state.user);\n\n  const appointments = useSelector((state) => state.appointments);\n\n  const { data, loading } = appointments;\n  useEffect(() => {\n    if (user) {\n      dispatch(getAppointments());\n    }\n  }, [dispatch]);\n\n  if (!user) {\n    return <Redirect to=\"/Login\" />;\n  }\n\n  return (\n    <div className=\"card text-center\">\n      <h3>Appointments</h3>\n      {loading && <span className=\"spinner-border spinner-border-lg\" />}\n      <div className=\"card-body d-flex flex-wrap\">\n        {(!loading && data.length === 0)\n        && (\n        <h4 className=\"create-appointment\">\n          You do not have any appointment. Create one\n          <Link to=\"/appointments/new\">\n            here\n          </Link>\n        </h4>\n        )}\n      </div>\n      {\n      data && data.map((appointment) => {\n        const d = new Date(appointment.appointment_date);\n        const date = d.toUTCString();\n        return (\n          <Link to={`/appointment/${appointment.id}`} key={appointment.id}>\n            <div className=\"card m-4\">\n              <div className=\"card-body\">\n                <p>\n                  On &nbsp;\n                  {date}\n                </p>\n              </div>\n            </div>\n          </Link>\n        );\n      })\n  }\n    </div>\n\n  );\n};\n\nexport default Appointments;\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport API from '../api/api';\n\nexport const getDoctor = createAsyncThunk(\n  'doctor/getDoctor',\n  async (id, token) => {\n    const response = await fetch(`${API}/doctors/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data;\n  },\n);\n\nexport const doctorSlice = createSlice({\n  name: 'doctor',\n  initialState: {\n    loading: false,\n    error: null,\n    data: null,\n  },\n  extraReducers: {\n    [getDoctor.pending]: (state) => {\n      state.loading = true;\n    },\n    [getDoctor.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [getDoctor.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n  },\n\n});\n\nexport default doctorSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useParams, Link } from 'react-router-dom';\nimport { getDoctor } from '../redux/doctorSlice';\n\nconst Doctor = () => {\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDoctor(id));\n  }, []);\n\n  const user = useSelector((state) => state.user);\n  const doctor = useSelector((state) => state.doctor);\n\n  if (!user) {\n    return <Redirect to=\"/Login\" />;\n  }\n\n  const { data, loading } = doctor;\n\n  return (\n    <div className=\"\">\n      <div className=\"text-center\">\n        {loading && <span className=\"spinner-border spinner-border-lg\" />}\n      </div>\n\n      {data && (\n        <div className=\"card style=width: 18rem\">\n          <img src={data.image} alt={data.name} className=\"card-img-top single-doctor-img\" />\n          <div className=\"card-body\">\n            <p>{data.name}</p>\n            <p>{data.specialization}</p>\n            <p>{data.experience}</p>\n            <p>experience</p>\n            <p>consultation fee: 3000 Naira</p>\n            <Link\n              to={{\n                pathname: '/appointments/new',\n                doctorId: data.id,\n              }}\n              className=\"btn btn-info\"\n            >\n              Add Appointment\n            </Link>\n          </div>\n        </div>\n      )}\n\n    </div>\n\n  );\n};\n\nexport default Doctor;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-extraneous-dependencies */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport API from '../api/api';\n\nexport const getDoctors = createAsyncThunk(\n  'doctors/getDoctors',\n  async (token) => {\n    const response = await fetch(`${API}/doctors`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data;\n  },\n);\n\nexport const doctorsSlice = createSlice({\n  name: 'doctors',\n  initialState: {\n    loading: false,\n    error: null,\n    data: null,\n  },\n  extraReducers: {\n    [getDoctors.pending]: (state) => {\n      state.loading = true;\n    },\n    [getDoctors.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [getDoctors.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n  },\n\n});\n\nexport default doctorsSlice.reducer;\n\nexport const selectAllDoctors = (state) => state.doctors;\n","/* eslint-disable no-unused-vars */\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDoctors, selectAllDoctors } from '../redux/doctorsSlice';\n\nconst DoctorsList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDoctors());\n  }, [dispatch]);\n\n  const doctors = useSelector(selectAllDoctors);\n  const { loading } = doctors;\n\n  const renderedDoctors = doctors.data && doctors.data.map((doctor) => (\n    <div className=\"card style=width: 18rem \" key={doctor.id}>\n      <div className=\"card-body col-3 listDoctors\">\n        <img src={doctor.image} alt={doctor.name} className=\"card-img-top doctor-img\" />\n        <p className=\"doctor-name\">{doctor.name}</p>\n        <p className=\"doctor-specialization\">{doctor.specialization}</p>\n        <div>\n          <p className=\"doctor-experience\">{doctor.experience}</p>\n          <p>experience</p>\n        </div>\n        <Link to={`/doctors/${doctor.id}`} className=\"btn btn-info \">\n          View Doctor\n        </Link>\n      </div>\n    </div>\n  ));\n\n  return (\n    <div className=\"\">\n      <h2>Doctors</h2>\n      {loading && <span className=\"spinner-border spinner-border-lg\" />}\n      <h2>{renderedDoctors}</h2>\n    </div>\n\n  );\n};\n\nexport default DoctorsList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport RegisterForm from '../components/RegisterForm';\nimport { changeType } from '../redux/typeSlice';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const access = 'Login';\n  useEffect(() => {\n    dispatch(changeType(access));\n  }, []);\n\n  const { error } = useSelector((state) => state.user);\n\n  return (\n    <>\n      { error\n        ? (\n          <div>\n            <div className=\"login-error\">{error}</div>\n            <br />\n            <RegisterForm access={access} endpoint=\"authentications\" />\n          </div>\n        )\n        : (\n          <RegisterForm access={access} endpoint=\"authentications\" />\n        )}\n    </>\n  );\n};\n\nexport default Login;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faFacebookF, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faFacebookF, faTwitter, faInstagram);\n\nconst SocialIcons = () => (\n  <div className=\"d-flex justify-content-around social-icons\">\n    <FontAwesomeIcon icon={['fab', 'twitter']} size=\"lg\" className=\"\" />\n    <FontAwesomeIcon icon={['fab', 'facebook-f']} size=\"lg\" className=\"\" />\n    <FontAwesomeIcon icon={['fab', 'instagram']} size=\"lg\" className=\"\" />\n  </div>\n);\n\nexport default SocialIcons;\n","import { faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { logout } from '../redux/userSlice';\n\nconst Logout = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const token = localStorage.getItem('token');\n  const handleClick = () => {\n    localStorage.removeItem('token');\n    dispatch(logout());\n    history.push('/');\n  };\n  return (\n    <div className=\"logout\">\n      { token && (\n        <button\n          type=\"button\"\n          aria-label=\"Logout\"\n          onClick={handleClick}\n        >\n          <span>Logout</span>\n          <FontAwesomeIcon icon={faPowerOff} />\n        </button>\n      ) }\n    </div>\n  );\n};\n\nexport default Logout;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SocialIcons from '../containers/SocialIcons';\nimport Logout from './Logout';\n\nconst NavBar = () => {\n  const { data: user } = useSelector((state) => state.user);\n  const token = localStorage.getItem('token');\n\n  return (\n\n    <nav className=\"nav\">\n      <p>Echantill hospital</p>\n\n      <div className=\"nav-home d-flex flex-column justify-content-between align-items-center  m-4\">\n        <div>\n          {user && user.username}\n          {token ? (\n            <div>\n              <Link to=\"/doctors\" className=\"doc nav-link active\">Doctors</Link>\n              <Link to=\"/appointments\" className=\"appoint-md nav-link\">Appointments</Link>\n              <Logout />\n            </div>\n          ) : (\n            <div className=\"nav-home\">\n              <Link to=\"/\" className=\"nav-link\">Home</Link>\n              <Link to=\"/Signup\" className=\"nav-link\">Signup</Link>\n              <Link to=\"/Login\" className=\"nav-link\">Login</Link>\n            </div>\n          )}\n        </div>\n        <div className=\"nav-footer\">\n          <SocialIcons />\n          <p>&copy;2021, Echantill hospital</p>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","/* eslint-disable camelcase */\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { postAppointments } from '../redux/appointmentsSlice';\n\nconst NewAppointment = () => {\n  const [appointmentDate, setAppointmentDate] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { data: userData } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const { data, error } = useSelector((state) => state.doctors);\n\n  const onChangeDoctorId = (e) => {\n    const doctorId = e.target.value;\n    setDoctorId(doctorId);\n  };\n\n  const onChangeAppointmentDate = (e) => {\n    const appointmentDate = e.target.value;\n    setAppointmentDate(appointmentDate);\n  };\n\n  const doctor_id = doctorId;\n  const appointment_date = appointmentDate;\n  const { user_id } = userData;\n\n  const handleBooking = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    // eslint-disable-next-line no-underscore-dangle\n\n    dispatch(postAppointments({\n      user_id, doctor_id, appointment_date,\n    }))\n      .then(() => {\n        setSuccessful(true);\n        alert.show('Appointment created', {\n          type: 'success',\n          timeout: 2000,\n        });\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error.message);\n        setSuccessful(false);\n      });\n  };\n\n  const options = data && (\n    data.map((doctor) => (\n      <option\n        key={doctor.id}\n        value={doctor.id}\n      >\n        {doctor.name}\n      </option>\n    ))\n  );\n\n  if (!user_id) {\n    return <Redirect to=\"/Login\" />;\n  }\n  if (successful) {\n    return <Redirect to=\"/appointments\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <form onSubmit={handleBooking}>\n          { !successful && (\n          <div>\n            <div className=\"form-group create\">\n              <label htmlFor=\"appointmentDate\" className=\"control-label\">\n                Appointment Date\n                <input\n                  type=\"datetime-local\"\n                  className=\"form-control\"\n                  name=\"appointmentDate\"\n                  id=\"appointmentDate\"\n                  required\n                  value={appointmentDate}\n                  onChange={onChangeAppointmentDate}\n                />\n              </label>\n            </div>\n            <div className=\"form-group create\">\n              <label htmlFor=\"doctorId\">\n                Select from list:\n                <select className=\"form-control\" id=\"doctorId\" onChange={onChangeDoctorId} value={doctorId} selected={doctor_id}>\n\n                  {loading ? <option>Loading..</option> : options }\n                </select>\n              </label>\n            </div>\n            <div className=\"form-group create\">\n              <button className=\"btn btn-primary btn-block\" disabled={loading} type=\"submit\">\n                {loading && (\n                <span className=\"spinner-border spinner-border-sm\" />\n                )}\n                <span>Book</span>\n              </button>\n            </div>\n          </div>\n          )}\n          {error && (\n          <div className=\"form-group\">\n            <div className={successful ? 'alert alert-success' : 'alert alert-danger'} role=\"alert\">\n              {error}\n            </div>\n          </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default NewAppointment;\n","import React, { useState } from 'react';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport API from '../api/api';\nimport { getAppointments } from '../redux/appointmentsSlice';\n\nconst Appointment = () => {\n  const [successful] = useState(false);\n  const { data: user } = useSelector((state) => state.user);\n  const doctor = useSelector((state) => state.doctor);\n  const dispatch = useDispatch();\n\n  if (!user) {\n    return <Redirect to=\"/Login\" />;\n  }\n\n  const { id } = useParams();\n\n  const handleDelete = (id) => {\n    const token = localStorage.getItem('token');\n    fetch(\n      `${API}/appointments/${id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    ).then(() => dispatch(getAppointments(token)));\n  };\n\n  if (successful) {\n    return <Redirect to=\"/appointments\" />;\n  }\n\n  const { data, error, loading } = doctor;\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        {loading && <span className=\"spinner-border spinner-border-lg\" />}\n        {\n          doctor && (\n          <div className=\"card w-50\">\n            <div className=\"card-body\">\n              <p className=\"card-text\">\n                Appointment Id: &nbsp;\n                {id}\n              </p>\n              <p>\n                With &nbsp;\n                <Link to={`/doctors/${doctor.id}`}>\n                  {doctor.data.name}\n                </Link>\n              </p>\n              <button\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={() => { handleDelete(id); }}\n                disabled={loading}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n          )\n        }\n        {\n          error && <p>{data}</p>\n        }\n      </header>\n    </div>\n  );\n};\n\nexport default Appointment;\n","const Home = () => (\n  <div className=\"card style=width: 18rem home m-4\">\n    <img src=\"https://user-images.githubusercontent.com/51296741/128604204-e71d0644-e88f-4743-b922-e708aa5a23d9.png\" className=\"card-img-top\" alt=\"home-page\" />\n    <div className=\"card-body\" />\n  </div>\n);\n\nexport default Home;\n","import {\n  BrowserRouter as Router, Redirect, Route, Switch,\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Signup from './Signup';\nimport Appointments from '../components/Appointments';\nimport Doctor from '../components/Doctor';\nimport DoctorsList from '../components/DoctorsList';\nimport Login from './Login';\nimport NavBar from '../components/NavBar';\nimport NewAppointment from '../components/NewAppointment';\nimport Appointment from '../components/Appointment';\nimport Home from '../components/Home';\n\nfunction App() {\n  return (\n\n    <div className=\"container\">\n      <div className=\"row\">\n        <Router>\n          <div className=\"col-3\">\n            <NavBar />\n          </div>\n          <Switch>\n            <div className=\"col-9\">\n              <Route exact path=\"/Signup\" component={Signup} />\n              <Route exact path=\"/Login\" component={Login} />\n              <Route exact path=\"/doctors\" component={DoctorsList} />\n              <Route exact path=\"/doctors/:id\" component={Doctor} />\n              <Route exact path=\"/appointments/new\" component={NewAppointment} />\n              <Route exact path=\"/appointments\" component={Appointments} />\n              <Route exact path=\"/appointment/:id\" component={Appointment} />\n              <Route exact path=\"/\" component={Home} />\n              <Redirect to=\"/\" />\n            </div>\n          </Switch>\n        </Router>\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport doctorsReducer from './doctorsSlice';\nimport appointmentsReducer from './appointmentsSlice';\nimport userReducer from './userSlice';\nimport typeReducer from './typeSlice';\nimport doctorReducer from './doctorSlice';\n\nexport default configureStore({\n  reducer: {\n    doctors: doctorsReducer,\n    appointments: appointmentsReducer,\n    user: userReducer,\n    type: typeReducer,\n    doctor: doctorReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport './index.css';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}