{"version":3,"sources":["api/api.js","redux/userSlice.js","components/Loading.js","components/RegisterForm.js","redux/typeSlice.js","containers/Signup.js","redux/appointmentsSlice.js","components/Appointments.js","redux/doctorSlice.js","components/Doctor.js","redux/doctorsSlice.js","components/DoctorsList.js","containers/Login.js","components/Logout.js","components/NavBar.js","components/NewAppointment.js","containers/App.js","redux/store.js","index.js"],"names":["API","userAuth","createAsyncThunk","a","username","password","age","endpoint","fetch","method","headers","Accept","body","JSON","stringify","response","json","data","ok","Error","failure","localStorage","setItem","jwt","userSlice","createSlice","name","initialState","loading","error","reducers","logout","extraReducers","pending","state","rejected","action","toast","message","fulfilled","payload","actions","Loading","className","icon","faSpinner","spin","size","RegisterForm","access","history","useHistory","dispatch","useDispatch","user","useSelector","useState","setUsername","setPassword","setAge","onSubmit","e","preventDefault","then","push","htmlFor","type","id","required","minLength","maxLength","value","onChange","target","to","typeSlice","changeType","_state","Signup","useEffect","postAppointments","user_id","appointment_date","doctor_id","Authorization","addAppointments","getAppointments","statusText","appointmentsSlice","Appointments","appointments","length","getDoctor","token","doctorSlice","Doctor","useParams","doctor","src","image","alt","specialization","experience","pathname","doctorId","getDoctors","doctorsSlice","selectAllDoctors","doctors","DoctorsList","renderedDoctors","map","Login","Logout","getItem","onClick","removeItem","NavBar","NewAppointment","appointmentDate","setAppointmentDate","setDoctorId","successful","setSuccessful","setLoading","userData","catch","options","alert","show","timeout","console","log","disabled","role","App","exact","path","component","configureStore","reducer","doctorsReducer","appointmentsReducer","userReducer","typeReducer","doctorReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7191e0c1.chunk.js","sourcesContent":["const API = 'https://agile-escarpment-87534.herokuapp.com/api/v1';\n\nexport default API;\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport API from '../api/api';\n\nexport const userAuth = createAsyncThunk(\n  'user/userAuth',\n  async ({\n    username, password, age, endpoint,\n  }) => {\n    const response = await fetch(`${API}/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        age,\n      }),\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data.failure);\n    localStorage.setItem('token', data.jwt);\n    return data;\n  },\n);\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    loading: false,\n    error: null,\n    data: null,\n  },\n  reducers: {\n    logout: () => ({\n      loading: false,\n      error: null,\n      data: null,\n    }),\n  },\n  extraReducers: {\n    [userAuth.pending]: (state) => {\n      state.loading = true;\n    },\n    [userAuth.rejected]: (state, action) => {\n      state.loading = false;\n      toast.error(action.error.message);\n      state.error = action.error.message;\n    },\n    [userAuth.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n  },\n});\n\nexport const { logout } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Loading = () => (<div className=\"\"><FontAwesomeIcon icon={faSpinner} spin size=\"10x\" /></div>);\n\nexport default Loading;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { userAuth } from '../redux/userSlice';\nimport Loading from './Loading';\n\nconst RegisterForm = ({ access, endpoint }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [age, setAge] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(userAuth({\n      username, password, age, endpoint,\n    }))\n      .then(() => {\n        history.push('/doctors');\n      });\n  };\n  if (user.loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group create\">\n          <label htmlFor=\"username\" className=\"control-label\">\n            Username\n            <input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              required\n              minLength=\"3\"\n              maxLength=\"15\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"form-group create\">\n          <label htmlFor=\"password\" className=\"control-label\">\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              required\n              minLength=\"5\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </label>\n        </div>\n        <div className=\"form-group create\">\n          <label htmlFor=\"age\" className=\"control-label\">\n            Age\n            <input\n              type=\"text\"\n              name=\"age\"\n              id=\"age\"\n              required\n              minLength=\"1\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n            />\n          </label>\n        </div>\n\n        <div className=\"form-group create\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn-lg\"\n          >\n            {access}\n          </button>\n        </div>\n      </form>\n      { access === 'Signup' ? (\n        <p className=\"text-center\">\n          Do you already have an account?\n          {' '}\n          <Link to=\"/Login\">Login</Link>\n        </p>\n      ) : (\n        <p className=\"text-center\">\n          Do you need to create an account?\n          {' '}\n          <Link to=\"/Signup\">Signup</Link>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default RegisterForm;\n\nRegisterForm.propTypes = {\n  access: PropTypes.string.isRequired,\n  endpoint: PropTypes.string.isRequired,\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const typeSlice = createSlice({\n  name: 'type',\n  initialState: '',\n  reducers: {\n    changeType: (_state, action) => action.payload,\n  },\n});\n\nexport const { changeType } = typeSlice.actions;\n\nexport default typeSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport RegisterForm from '../components/RegisterForm';\nimport { changeType } from '../redux/typeSlice';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const access = 'Signup';\n  useEffect(() => {\n    dispatch(changeType(access));\n  }, []);\n  return (\n    <>\n      <RegisterForm access={access} endpoint=\"users\" />\n    </>\n  );\n};\n\nexport default Signup;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable camelcase */\n/* eslint-disable no-use-before-define */\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport API from '../api/api';\n\nexport const postAppointments = createAsyncThunk(\n  'appointments/postAppointments',\n  async (\n    {\n      user_id, appointment_date, doctor_id, jwt,\n    },\n    {\n      dispatch,\n    },\n  ) => {\n    const response = await fetch(`${API}/appointments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${jwt}`,\n      },\n\n      body: JSON.stringify({\n        appointment_date,\n        doctor_id,\n        user_id,\n      }),\n    });\n    const data = await response.json();\n    dispatch(addAppointments(data));\n    if (!response.ok) throw new Error(data.failure);\n    localStorage.setItem('token', data.jwt);\n\n    return data;\n  },\n);\n\nexport const getAppointments = createAsyncThunk(\n  'appointments/getAppointments',\n  async ({ jwt, id }) => {\n    const response = await fetch(`${API}/appointments/${id}`, {\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n      },\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data;\n  },\n);\n\nexport const appointmentsSlice = createSlice({\n  name: 'appointments',\n  initialState: {\n    loading: false,\n    error: null,\n    data: [],\n  },\n  reducers: {\n    addAppointments: (state, action) => {\n      state.data.push(action.payload);\n    },\n  },\n  extraReducers: {\n    [postAppointments.pending]: (state) => {\n      state.loading = true;\n    },\n    [postAppointments.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [postAppointments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n    [getAppointments.pending]: (state) => {\n      state.loading = true;\n    },\n    [getAppointments.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [getAppointments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n\n  },\n});\n\nexport const { addAppointments } = appointmentsSlice.actions;\n\nexport default appointmentsSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getAppointments } from '../redux/appointmentsSlice';\n\nconst Appointments = () => {\n  const dispatch = useDispatch();\n  const { data: user } = useSelector((state) => state.user);\n\n  const appointments = useSelector((state) => state.appointments);\n\n  const { data, loading } = appointments;\n\n  useEffect(() => {\n    if (user) {\n      dispatch(getAppointments(user.user_id));\n    }\n  }, []);\n\n  if (!user) {\n    return <Redirect to=\"/Login\" />;\n  }\n\n  return (\n    <div className=\"container text-center\">\n      <h3>Appointments</h3>\n      {loading && <span className=\"spinner-border spinner-border-lg\" />}\n      <div className=\"d-flex flex-wrap\">\n        {(!loading && data.length === 0)\n        && (\n        <h4>\n          You do not have any appointment. Create one\n          <Link to=\"/appointments/new\">\n            here\n          </Link>\n        </h4>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Appointments;\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport API from '../api/api';\n\nexport const getDoctor = createAsyncThunk(\n  'doctor/getDoctor',\n  async (id, token) => {\n    const response = await fetch(`${API}/doctors/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data;\n  },\n);\n\nexport const doctorSlice = createSlice({\n  name: 'doctor',\n  initialState: {\n    loading: false,\n    error: null,\n    data: null,\n  },\n  extraReducers: {\n    [getDoctor.pending]: (state) => {\n      state.loading = true;\n    },\n    [getDoctor.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [getDoctor.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n  },\n\n});\n\nexport default doctorSlice.reducer;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useParams, Link } from 'react-router-dom';\nimport { getDoctor } from '../redux/doctorSlice';\n\nconst Doctor = () => {\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDoctor(id));\n  }, []);\n\n  const user = useSelector((state) => state.user);\n  const doctor = useSelector((state) => state.doctor);\n\n  if (!user) {\n    return <Redirect to=\"/Login\" />;\n  }\n\n  const { data, loading } = doctor;\n\n  return (\n    <div className=\"\">\n      <div className=\"text-center\">\n        {loading && <span className=\"spinner-border spinner-border-lg\" />}\n      </div>\n\n      {data && (\n        <div>\n          <img src={data.image} alt={data.name} className=\"\" />\n          <p>{data.name}</p>\n          <p>{data.specialization}</p>\n          <p>{data.experience}</p>\n          <p>consultation fee: 3000 Naira</p>\n          <li>\n            <Link\n              to={{\n                pathname: '/appointments/new',\n                doctorId: data.id,\n              }}\n\n            >\n              Add Appointment\n            </Link>\n          </li>\n        </div>\n      )}\n\n    </div>\n\n  );\n};\n\nexport default Doctor;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-extraneous-dependencies */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport API from '../api/api';\n\nexport const getDoctors = createAsyncThunk(\n  'doctors/getDoctors',\n  async (token) => {\n    const response = await fetch(`${API}/doctors`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data;\n  },\n);\n\nexport const doctorsSlice = createSlice({\n  name: 'doctors',\n  initialState: {\n    loading: false,\n    error: null,\n    data: null,\n  },\n  extraReducers: {\n    [getDoctors.pending]: (state) => {\n      state.loading = true;\n    },\n    [getDoctors.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n    [getDoctors.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    },\n  },\n\n});\n\nexport default doctorsSlice.reducer;\n\nexport const selectAllDoctors = (state) => state.doctors;\n\nexport const selectDoctorById = (doctors, id) => doctors.find(\n  (doctor) => doctor.id === id,\n);\n","/* eslint-disable no-unused-vars */\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDoctors, selectAllDoctors } from '../redux/doctorsSlice';\n\nconst DoctorsList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getDoctors());\n  }, [dispatch]);\n\n  const doctors = useSelector(selectAllDoctors);\n\n  const renderedDoctors = doctors.data && doctors.data.map((doctor) => (\n    <div className=\"\" key={doctor.id}>\n      <img src={doctor.image} alt={doctor.name} className=\"\" />\n      <p>{doctor.name}</p>\n      <p>{doctor.specialization}</p>\n      <p>{doctor.experience}</p>\n      <Link to={`/doctors/${doctor.id}`} className=\"\">\n        View Doctor\n      </Link>\n    </div>\n  ));\n\n  return (\n    <div className=\"\">\n      <h1>List Doctors</h1>\n      <h2>{renderedDoctors}</h2>\n    </div>\n\n  );\n};\n\nexport default DoctorsList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport RegisterForm from '../components/RegisterForm';\nimport { changeType } from '../redux/typeSlice';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const access = 'Login';\n  useEffect(() => {\n    dispatch(changeType(access));\n  }, []);\n  return (\n    <RegisterForm access={access} endpoint=\"authentications\" />\n  );\n};\n\nexport default Login;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { logout } from '../redux/userSlice';\n\nconst Logout = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const type = useSelector((state) => state.type);\n  const token = localStorage.getItem('token');\n  const handleClick = () => {\n    localStorage.removeItem('token');\n    dispatch(logout());\n    history.push('/Login');\n  };\n  return (\n    <session className=\"\">\n      <h1>{type}</h1>\n      { token && (\n        <button\n          type=\"button\"\n          aria-label=\"Logout\"\n          onClick={handleClick}\n        >\n          Logout\n        </button>\n      ) }\n    </session>\n  );\n};\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst NavBar = () => (\n  <nav>\n    <section>\n      <h5>Echantill clinic</h5>\n\n      <div className=\"navContent\">\n        <div className=\"navLinks\">\n          <ul>\n            <li>\n              <Link to=\"/doctors\">Doctors</Link>\n            </li>\n            <li>\n              <Link to=\"/appointments\">Appointments</Link>\n            </li>\n            <li>\n              <Link to=\"/Signup\">Signup</Link>\n            </li>\n            <li>\n              <Link to=\"/Login\">Login</Link>\n            </li>\n          </ul>\n\n        </div>\n      </div>\n\n    </section>\n  </nav>\n);\n\nexport default NavBar;\n","/* eslint-disable camelcase */\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { postAppointments } from '../redux/appointmentsSlice';\nimport { getDoctors } from '../redux/doctorsSlice';\n\nconst NewAppointment = () => {\n  const [appointmentDate, setAppointmentDate] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { data: userData } = useSelector((state) => state.user);\n  const { user_id, jwt } = userData;\n  const dispatch = useDispatch();\n  const { data, error } = useSelector((state) => state.doctors);\n  useEffect(() => {\n    if (data === null && userData) {\n      dispatch(getDoctors())\n        .then(() => {\n          loading(false);\n        })\n        .catch(() => {\n        });\n    }\n  }, [data, dispatch]);\n\n  const onChangeDoctorId = (e) => {\n    const doctorId = e.target.value;\n    setDoctorId(doctorId);\n  };\n\n  const onChangeAppointmentDate = (e) => {\n    const appointmentDate = e.target.value;\n    setAppointmentDate(appointmentDate);\n  };\n\n  const doctor_id = doctorId;\n  const appointment_date = appointmentDate;\n\n  const handleBooking = (e) => {\n    e.preventDefault();\n    setSuccessful(false);\n\n    // eslint-disable-next-line no-underscore-dangle\n    dispatch(postAppointments({\n      user_id, doctor_id, appointment_date, jwt,\n    }))\n      .then(() => {\n        setSuccessful(true);\n        alert.show('Appointment created', {\n          type: 'success',\n          timeout: 2000,\n        });\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error.message);\n        setSuccessful(false);\n      });\n  };\n\n  const options = data && (\n    data.map((doctor) => (\n      <option\n        key={doctor.id}\n        value={doctor.id}\n      >\n        {doctor.name}\n      </option>\n    ))\n  );\n\n  if (!userData) {\n    return <Redirect to=\"/login\" />;\n  }\n  if (successful) {\n    return <Redirect to=\"/appointments\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <form onSubmit={handleBooking}>\n          { !successful && (\n          <div>\n            <div className=\"form-group create\">\n              <label htmlFor=\"appointmentDate\" className=\"control-label\">\n                Appointment Date\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  name=\"appointmentDate\"\n                  id=\"appointmentDate\"\n                  required\n                  value={appointmentDate}\n                  onChange={onChangeAppointmentDate}\n                />\n              </label>\n            </div>\n            <div className=\"form-group create\">\n              <label htmlFor=\"doctorId\">\n                Select from list:\n                <select className=\"form-control\" id=\"doctorId\" onChange={onChangeDoctorId} value={doctorId}>\n                  {loading ? <option>Loading..</option> : options }\n                </select>\n              </label>\n            </div>\n            <div className=\"form-group create\">\n              <button className=\"btn btn-primary btn-block\" disabled={loading} type=\"submit\">\n                {loading && (\n                <span className=\"spinner-border spinner-border-sm\" />\n                )}\n                <span>Book</span>\n              </button>\n            </div>\n          </div>\n          )}\n          {error && (\n          <div className=\"form-group\">\n            <div className={successful ? 'alert alert-success' : 'alert alert-danger'} role=\"alert\">\n              {error}\n            </div>\n          </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default NewAppointment;\n","import {\n  BrowserRouter as Router, Redirect, Route, Switch,\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Signup from './Signup';\nimport Appointments from '../components/Appointments';\nimport Doctor from '../components/Doctor';\nimport DoctorsList from '../components/DoctorsList';\nimport Login from './Login';\nimport Logout from '../components/Logout';\nimport NavBar from '../components/NavBar';\nimport NewAppointment from '../components/NewAppointment';\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <Router>\n        <Logout />\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/Signup\" component={Signup} />\n          <Route exact path=\"/Login\" component={Login} />\n          <Route exact path=\"/doctors\" component={DoctorsList} />\n          <Route exact path=\"/doctors/:id\" component={Doctor} />\n          <Route exact path=\"/appointments/new\" component={NewAppointment} />\n          <Route exact path=\"/appointments\" component={Appointments} />\n          <Redirect to=\"/doctors\" />\n        </Switch>\n      </Router>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport doctorsReducer from './doctorsSlice';\nimport appointmentsReducer from './appointmentsSlice';\nimport userReducer from './userSlice';\nimport typeReducer from './typeSlice';\nimport doctorReducer from './doctorSlice';\n\nexport default configureStore({\n  reducer: {\n    doctors: doctorsReducer,\n    appointments: appointmentsReducer,\n    user: userReducer,\n    type: typeReducer,\n    doctor: doctorReducer,\n\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport './index.css';\nimport store from './redux/store';\n// import { getDoctors } from './redux/doctorsSlice';\n\n// const dispatch = useDispatch();\n// store.dispatch(getDoctors());\n// console.log('good at', dispatch);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}